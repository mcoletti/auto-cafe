group 'com.saat.auto.cafe'
version '1.0'
defaultTasks 'clean', 'test'
//sourceCompatibility = 1.8

// Plugins
apply plugin: 'java'
apply plugin: 'idea'

repositories {
    mavenCentral()
    maven {
        url uri('/Users/micahcoletti/.m2/repository')
    }
}



task copyProps {
    dependsOn 'copyPropsData'
    dependsOn 'copyPropsService'
    dependsOn 'copyPropsApi'
}

task copyPropsData(type: Sync) {

    from 'common/properties/application.yml'
    into 'data/src/main/resources/props'
}
task copyPropsService(type: Sync) {

    from 'common/properties/application.yml'
    into 'service/src/main/resources/props'
}

task copyPropsApi(type: Sync) {

    from 'common/properties/application.yml'
    into 'api/src/main/resources/props'
}


subprojects {
    apply plugin: 'java'
    group = 'com.saat.auto.cafe'
    version = '1.0'
    repositories {
        mavenCentral()
        maven {
            url uri('/Users/micahcoletti/.m2/repository')
        }
    }
    dependencies {
        compile group: 'org.yaml', name: 'snakeyaml', version: '1.17'
        compile group: 'org.testng', name: 'testng', version: '6.9.10'
        compile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
        compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
        compile group: 'org.assertj', name: 'assertj-core', version: '3.4.1'
        compile group: 'joda-time', name: 'joda-time', version: '2.9.4'
        compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
        compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.39'
        compile group: 'org.postgresql', name: 'postgresql', version: '9.4.1208'
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.3.5.RELEASE'
        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.3.5.RELEASE'
//        compile group: 'org.springframework.cloud', name: 'spring-cloud-config-server', version: '1.2.0.M1'
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.4.0'
        compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.4.0'
        compile group: 'io.swagger', name: 'swagger-jaxrs', version: '1.5.8'
        compile group: 'javax.inject', name: 'javax.inject', version: '1'
        compile group: 'com.hazelcast', name: 'hazelcast', version: '3.5.5'
        compile group: 'com.google.code.gson', name: 'gson', version: '2.7'
        compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.1.0'
//        compile group: 'org.apache-extras.cassandra-jdbc', name: 'cassandra-jdbc', version: '1.2.5'
//        compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: '3.0.2'
//        compile group: 'com.datastax.cassandra', name: 'cassandra-driver-dse', version: '3.0.0-rc1'
//        compile group: 'io.smartcat', name: 'cassandra-migration-tool', version: '2.1.9.0'
//        compile group: 'com.contrastsecurity', name: 'cassandra-migration', version: '0.6'
        compile group: 'com.contrastsecurity', name: 'cassandra-migration', version: '0.9-SNAPSHOT'
//        compile group: 'org.springframework.data', name: 'spring-data-cassandra', version: '1.4.2.RELEASE'
        compile group: 'com.datastax.cassandra', name: 'cassandra-driver-mapping', version: '3.1.0'
//        compile group: 'com.datastax.cassandra', name: 'cassandra-driver-mapping', version: '2.1.7.1'
        compile group: 'org.apache.cassandra', name: 'cassandra-all', version: '3.7'
        compile group: 'org.springframework.data', name: 'spring-data-commons', version: '1.12.4.RELEASE'
//        compile ('com.datastax.cassandra:cassandra-driver-mapping:3.1.0'){
//            exclude module: 'com.datastax.cassandra:cassandra-driver-core'
//        }
//        compile ('com.contrastsecurity:cassandra-migration:0.9-SNAPSHOT'){
//            exclude module: 'com.datastax.cassandra:cassandra-driver-core'
//        }
//        compile group: 'org.springframework', name: 'spring-core', version: '4.3.0.RELEASE'
//        providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

//        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
//        // tag::jetty[]
//        compile("org.springframework.boot:spring-boot-starter-web") {
//            exclude module: "spring-boot-starter-tomcat"
//        }
//        compile("org.springframework.boot:spring-boot-starter-jetty")
//        // end::jetty[]
//        // tag::actuator[]
//        compile("org.springframework.boot:spring-boot-starter-actuator")
//        // end::actuator[]
    }

    test {
        useTestNG()

        // explicitly include or exclude tests
        include 'com/saat/**/*UnitTest*'

        // show standard out and standard error of the test JVM(s) on the console
        testLogging.showStandardStreams = true

        // set JVM arguments for the test JVM(s)
        jvmArgs '-XX:MaxPermSize=256m'

        // listen to events in the test execution lifecycle
        beforeTest { descriptor ->
            logger.lifecycle("Running test: " + descriptor)
        }

        // listen to standard out and standard error of the test JVM(s)
        onOutput { descriptor, event ->
            logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
        }
    }
}

project(':data') {
    dependencies {
        compile project(':common')
    }
}
project(':api') {
    dependencies {
        compile project(':common')
        compile project(':data')
        compile project(':service')
    }
}
project(':service') {
    dependencies {
        compile project(':common')
        compile project(':data')
    }
}

dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '6.9.10'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.4.1'
    compile "org.projectlombok:lombok:1.16.8"
//    // tag::jetty[]
//    compile("org.springframework.boot:spring-boot-starter-web") {
//        exclude module: "spring-boot-starter-tomcat"
//    }
//    compile("org.springframework.boot:spring-boot-starter-jetty")
//    // end::jetty[]
//    // tag::actuator[]
//    compile("org.springframework.boot:spring-boot-starter-actuator")
//    // end::actuator[]
//    compile("org.springframework.boot:spring-boot-starter-web")
}
